import React, { useContext, useState } from 'react';
import { View, Text, TextInput, TouchableOpacity, StyleSheet, StatusBar, FlatList, Modal } from 'react-native';
import { GlobalContext } from './GlobalContext';
import MaterialIcons from '@expo/vector-icons/MaterialIcons';
import Feather from '@expo/vector-icons/Feather';


const FindFriends = ({ navigation, route }) => {
  // const { id, name, email } = route.params;
  // Extract userId from the route params
  const { username } = route.params;

  // Debugging to ensure userId is passed correctly
  const { updateUserData } = useContext(GlobalContext);
  const [number, setNumber] = useState('');
  const [modalVisible, setModalVisible] = useState(false);
  const [isButtonPressed, setButtonPressed] = useState(false);
  const [secondModalVisible, setSecondModalVisible] = useState(false);
  const [isNoButtonPressed, setNoButtonPressed] = useState(false);
  const [error, setError] = useState('');


  const countries = [
    { name: "Afghanistan", flag: "ğŸ‡¦ğŸ‡«", code: "+93" },
    { name: "Albania", flag: "ğŸ‡¦ğŸ‡±", code: "+355" },
    { name: "Algeria", flag: "ğŸ‡©ğŸ‡¿", code: "+213" },
    { name: "Andorra", flag: "ğŸ‡¦ğŸ‡©", code: "+376" },
    { name: "Angola", flag: "ğŸ‡¦ğŸ‡´", code: "+244" },
    { name: "Argentina", flag: "ğŸ‡¦ğŸ‡·", code: "+54" },
    { name: "Armenia", flag: "ğŸ‡¦ğŸ‡²", code: "+374" },
    { name: "Australia", flag: "ğŸ‡¦ğŸ‡º", code: "+61" },
    { name: "Austria", flag: "ğŸ‡¦ğŸ‡¹", code: "+43" },
    { name: "Azerbaijan", flag: "ğŸ‡¦ğŸ‡¿", code: "+994" },
    { name: "Bahamas", flag: "ğŸ‡§ğŸ‡¸", code: "+1-242" },
    { name: "Bahrain", flag: "ğŸ‡§ğŸ‡­", code: "+973" },
    { name: "Bangladesh", flag: "ğŸ‡§ğŸ‡©", code: "+880" },
    { name: "Barbados", flag: "ğŸ‡§ğŸ‡§", code: "+1-246" },
    { name: "Belarus", flag: "ğŸ‡§ğŸ‡¾", code: "+375" },
    { name: "Belgium", flag: "ğŸ‡§ğŸ‡ª", code: "+32" },
    { name: "Belize", flag: "ğŸ‡§ğŸ‡¿", code: "+501" },
    { name: "Benin", flag: "ğŸ‡§ğŸ‡¯", code: "+229" },
    { name: "Bhutan", flag: "ğŸ‡§ğŸ‡¹", code: "+975" },
    { name: "Bolivia", flag: "ğŸ‡§ğŸ‡´", code: "+591" },
    { name: "Bosnia and Herzegovina", flag: "ğŸ‡§ğŸ‡¦", code: "+387" },
    { name: "Botswana", flag: "ğŸ‡§ğŸ‡¼", code: "+267" },
    { name: "Brazil", flag: "ğŸ‡§ğŸ‡·", code: "+55" },
    { name: "Brunei", flag: "ğŸ‡§ğŸ‡³", code: "+673" },
    { name: "Bulgaria", flag: "ğŸ‡§ğŸ‡¬", code: "+359" },
    { name: "Burkina Faso", flag: "ğŸ‡§ğŸ‡«", code: "+226" },
    { name: "Burundi", flag: "ğŸ‡§ğŸ‡®", code: "+257" },
    { name: "Cabo Verde", flag: "ğŸ‡¨ğŸ‡»", code: "+238" },
    { name: "Cambodia", flag: "ğŸ‡°ğŸ‡­", code: "+855" },
    { name: "Cameroon", flag: "ğŸ‡¨ğŸ‡²", code: "+237" },
    { name: "Canada", flag: "ğŸ‡¨ğŸ‡¦", code: "+1" },
    { name: "Central African Republic", flag: "ğŸ‡¨ğŸ‡«", code: "+236" },
    { name: "Chad", flag: "ğŸ‡¹ğŸ‡©", code: "+235" },
    { name: "Chile", flag: "ğŸ‡¨ğŸ‡±", code: "+56" },
    { name: "China", flag: "ğŸ‡¨ğŸ‡³", code: "+86" },
    { name: "Colombia", flag: "ğŸ‡¨ğŸ‡´", code: "+57" },
    { name: "Comoros", flag: "ğŸ‡°ğŸ‡²", code: "+269" },
    { name: "Congo", flag: "ğŸ‡¨ğŸ‡¬", code: "+242" },
    { name: "Costa Rica", flag: "ğŸ‡¨ğŸ‡·", code: "+506" },
    { name: "Croatia", flag: "ğŸ‡­ğŸ‡·", code: "+385" },
    { name: "Cuba", flag: "ğŸ‡¨ğŸ‡º", code: "+53" },
    { name: "Cyprus", flag: "ğŸ‡¨ğŸ‡¾", code: "+357" },
    { name: "Czech Republic", flag: "ğŸ‡¨ğŸ‡¿", code: "+420" },
    { name: "Democratic Republic of the Congo", flag: "ğŸ‡¨ğŸ‡©", code: "+243" },
    { name: "Denmark", flag: "ğŸ‡©ğŸ‡°", code: "+45" },
    { name: "Djibouti", flag: "ğŸ‡©ğŸ‡¯", code: "+253" },
    { name: "Dominica", flag: "ğŸ‡©ğŸ‡²", code: "+1-767" },
    { name: "Dominican Republic", flag: "ğŸ‡©ğŸ‡´", code: "+1-809" },
    { name: "East Timor", flag: "ğŸ‡¹ğŸ‡±", code: "+670" },
    { name: "Ecuador", flag: "ğŸ‡ªğŸ‡¨", code: "+593" },
    { name: "Egypt", flag: "ğŸ‡ªğŸ‡¬", code: "+20" },
    { name: "El Salvador", flag: "ğŸ‡¸ğŸ‡»", code: "+503" },
    { name: "Equatorial Guinea", flag: "ğŸ‡¬ğŸ‡¶", code: "+240" },
    { name: "Eritrea", flag: "ğŸ‡ªğŸ‡·", code: "+291" },
    { name: "Estonia", flag: "ğŸ‡ªğŸ‡ª", code: "+372" },
    { name: "Eswatini", flag: "ğŸ‡¸ğŸ‡¿", code: "+268" },
    { name: "Ethiopia", flag: "ğŸ‡ªğŸ‡¹", code: "+251" },
    { name: "Fiji", flag: "ğŸ‡«ğŸ‡¯", code: "+679" },
    { name: "Finland", flag: "ğŸ‡«ğŸ‡®", code: "+358" },
    { name: "France", flag: "ğŸ‡«ğŸ‡·", code: "+33" },
    { name: "Gabon", flag: "ğŸ‡¬ğŸ‡¦", code: "+241" },
    { name: "Gambia", flag: "ğŸ‡¬ğŸ‡²", code: "+220" },
    { name: "Georgia", flag: "ğŸ‡¬ğŸ‡ª", code: "+995" },
    { name: "Germany", flag: "ğŸ‡©ğŸ‡ª", code: "+49" },
    { name: "Ghana", flag: "ğŸ‡¬ğŸ‡­", code: "+233" },
    { name: "Greece", flag: "ğŸ‡¬ğŸ‡·", code: "+30" },
    { name: "Grenada", flag: "ğŸ‡¬ğŸ‡©", code: "+1-473" },
    { name: "Guatemala", flag: "ğŸ‡¬ğŸ‡¹", code: "+502" },
    { name: "Guinea", flag: "ğŸ‡¬ğŸ‡³", code: "+224" },
    { name: "Guinea-Bissau", flag: "ğŸ‡¬ğŸ‡¼", code: "+245" },
    { name: "Guyana", flag: "ğŸ‡¬ğŸ‡¾", code: "+592" },
    { name: "Haiti", flag: "ğŸ‡­ğŸ‡¹", code: "+509" },
    { name: "Honduras", flag: "ğŸ‡­ğŸ‡³", code: "+504" },
    { name: "Hungary", flag: "ğŸ‡­ğŸ‡º", code: "+36" },
    { name: "Iceland", flag: "ğŸ‡®ğŸ‡¸", code: "+354" },
    { name: "India", flag: "ğŸ‡®ğŸ‡³", code: "+91" },
    { name: "Indonesia", flag: "ğŸ‡®ğŸ‡©", code: "+62" },
    { name: "Iran", flag: "ğŸ‡®ğŸ‡·", code: "+98" },
    { name: "Iraq", flag: "ğŸ‡®ğŸ‡¶", code: "+964" },
    { name: "Ireland", flag: "ğŸ‡®ğŸ‡ª", code: "+353" },
    { name: "Israel", flag: "ğŸ‡®ğŸ‡±", code: "+972" },
    { name: "Italy", flag: "ğŸ‡®ğŸ‡¹", code: "+39" },
    { name: "Jamaica", flag: "ğŸ‡¯ğŸ‡²", code: "+1-876" },
    { name: "Japan", flag: "ğŸ‡¯ğŸ‡µ", code: "+81" },
    { name: "Jordan", flag: "ğŸ‡¯ğŸ‡´", code: "+962" },
    { name: "Kazakhstan", flag: "ğŸ‡°ğŸ‡¿", code: "+7" },
    { name: "Kenya", flag: "ğŸ‡°ğŸ‡ª", code: "+254" },
    { name: "Kiribati", flag: "ğŸ‡°ğŸ‡®", code: "+686" },
    { name: "Kuwait", flag: "ğŸ‡°ğŸ‡¼", code: "+965" },
    { name: "Kyrgyzstan", flag: "ğŸ‡°ğŸ‡¬", code: "+996" },
    { name: "Laos", flag: "ğŸ‡±ğŸ‡¦", code: "+856" },
    { name: "Latvia", flag: "ğŸ‡±ğŸ‡»", code: "+371" },
    { name: "Lebanon", flag: "ğŸ‡±ğŸ‡§", code: "+961" },
    { name: "Lesotho", flag: "ğŸ‡±ğŸ‡¸", code: "+266" },
    { name: "Liberia", flag: "ğŸ‡±ğŸ‡·", code: "+231" },
    { name: "Libya", flag: "ğŸ‡±ğŸ‡¾", code: "+218" },
    { name: "Liechtenstein", flag: "ğŸ‡±ğŸ‡®", code: "+423" },
    { name: "Lithuania", flag: "ğŸ‡±ğŸ‡¹", code: "+370" },
    { name: "Luxembourg", flag: "ğŸ‡±ğŸ‡º", code: "+352" },
    { name: "Madagascar", flag: "ğŸ‡²ğŸ‡¬", code: "+261" },
    { name: "Malawi", flag: "ğŸ‡²ğŸ‡¼", code: "+265" },
    { name: "Malaysia", flag: "ğŸ‡²ğŸ‡¾", code: "+60" },
    { name: "Maldives", flag: "ğŸ‡²ğŸ‡»", code: "+960" },
    { name: "Mali", flag: "ğŸ‡²ğŸ‡±", code: "+223" },
    { name: "Malta", flag: "ğŸ‡²ğŸ‡¹", code: "+356" },
    { name: "Marshall Islands", flag: "ğŸ‡²ğŸ‡­", code: "+692" },
    { name: "Mauritania", flag: "ğŸ‡²ğŸ‡·", code: "+222" },
    { name: "Mauritius", flag: "ğŸ‡²ğŸ‡º", code: "+230" },
    { name: "Mexico", flag: "ğŸ‡²ğŸ‡½", code: "+52" },
    { name: "Micronesia", flag: "ğŸ‡«ğŸ‡²", code: "+691" },
    { name: "Moldova", flag: "ğŸ‡²ğŸ‡©", code: "+373" },
    { name: "Monaco", flag: "ğŸ‡²ğŸ‡¨", code: "+377" },
    { name: "Mongolia", flag: "ğŸ‡²ğŸ‡³", code: "+976" },
    { name: "Montenegro", flag: "ğŸ‡²ğŸ‡ª", code: "+382" },
    { name: "Morocco", flag: "ğŸ‡²ğŸ‡¦", code: "+212" },
    { name: "Mozambique", flag: "ğŸ‡²ğŸ‡¿", code: "+258" },
    { name: "Myanmar", flag: "ğŸ‡²ğŸ‡²", code: "+95" },
    { name: "Namibia", flag: "ğŸ‡³ğŸ‡¦", code: "+264" },
    { name: "Nauru", flag: "ğŸ‡³ğŸ‡·", code: "+674" },
    { name: "Nepal", flag: "ğŸ‡³ğŸ‡µ", code: "+977" },
    { name: "Netherlands", flag: "ğŸ‡³ğŸ‡±", code: "+31" },
    { name: "New Zealand", flag: "ğŸ‡³ğŸ‡¿", code: "+64" },
    { name: "Nicaragua", flag: "ğŸ‡³ğŸ‡®", code: "+505" },
    { name: "Niger", flag: "ğŸ‡³ğŸ‡ª", code: "+227" },
    { name: "Nigeria", flag: "ğŸ‡³ğŸ‡¬", code: "+234" },
    { name: "North Korea", flag: "ğŸ‡°ğŸ‡µ", code: "+850" },
    { name: "North Macedonia", flag: "ğŸ‡²ğŸ‡°", code: "+389" },
    { name: "Norway", flag: "ğŸ‡³ğŸ‡´", code: "+47" },
    { name: "Oman", flag: "ğŸ‡´ğŸ‡²", code: "+968" },
    { name: "Pakistan", flag: "ğŸ‡µğŸ‡°", code: "+92" },
    { name: "Palau", flag: "ğŸ‡µğŸ‡¼", code: "+680" },
    { name: "Panama", flag: "ğŸ‡µğŸ‡¦", code: "+507" },
    { name: "Papua New Guinea", flag: "ğŸ‡µğŸ‡¬", code: "+675" },
    { name: "Paraguay", flag: "ğŸ‡µğŸ‡¾", code: "+595" },
    { name: "Peru", flag: "ğŸ‡µğŸ‡ª", code: "+51" },
    { name: "Philippines", flag: "ğŸ‡µğŸ‡­", code: "+63" },
    { name: "Poland", flag: "ğŸ‡µğŸ‡±", code: "+48" },
    { name: "Portugal", flag: "ğŸ‡µğŸ‡¹", code: "+351" },
    { name: "Qatar", flag: "ğŸ‡¶ğŸ‡¦", code: "+974" },
    { name: "Romania", flag: "ğŸ‡·ğŸ‡´", code: "+40" },
    { name: "Russia", flag: "ğŸ‡·ğŸ‡º", code: "+7" },
    { name: "Rwanda", flag: "ğŸ‡·ğŸ‡¼", code: "+250" },
    { name: "Saint Kitts and Nevis", flag: "ğŸ‡°ğŸ‡³", code: "+1-869" },
    { name: "Saint Lucia", flag: "ğŸ‡±ğŸ‡¨", code: "+1-758" },
    { name: "Saint Vincent and the Grenadines", flag: "ğŸ‡»ğŸ‡¨", code: "+1-784" },
    { name: "Samoa", flag: "ğŸ‡¼ğŸ‡¸", code: "+685" },
    { name: "San Marino", flag: "ğŸ‡¸ğŸ‡²", code: "+378" },
    { name: "Sao Tome and Principe", flag: "ğŸ‡¸ğŸ‡¹", code: "+239" },
    { name: "Saudi Arabia", flag: "ğŸ‡¸ğŸ‡¦", code: "+966" },
    { name: "Senegal", flag: "ğŸ‡¸ğŸ‡³", code: "+221" },
    { name: "Serbia", flag: "ğŸ‡·ğŸ‡¸", code: "+381" },
    { name: "Seychelles", flag: "ğŸ‡¸ğŸ‡¨", code: "+248" },
    { name: "Sierra Leone", flag: "ğŸ‡¸ğŸ‡±", code: "+232" },
    { name: "Singapore", flag: "ğŸ‡¸ğŸ‡¬", code: "+65" },
    { name: "Slovakia", flag: "ğŸ‡¸ğŸ‡°", code: "+421" },
    { name: "Slovenia", flag: "ğŸ‡¸ğŸ‡®", code: "+386" },
    { name: "Solomon Islands", flag: "ğŸ‡¸ğŸ‡§", code: "+677" },
    { name: "Somalia", flag: "ğŸ‡¸ğŸ‡´", code: "+252" },
    { name: "South Africa", flag: "ğŸ‡¿ğŸ‡¦", code: "+27" },
    { name: "South Korea", flag: "ğŸ‡°ğŸ‡·", code: "+82" },
    { name: "South Sudan", flag: "ğŸ‡¸ğŸ‡¸", code: "+211" },
    { name: "Spain", flag: "ğŸ‡ªğŸ‡¸", code: "+34" },
    { name: "Sri Lanka", flag: "ğŸ‡±ğŸ‡°", code: "+94" },
    { name: "Sudan", flag: "ğŸ‡¸ğŸ‡©", code: "+249" },
    { name: "Suriname", flag: "ğŸ‡¸ğŸ‡·", code: "+597" },
    { name: "Sweden", flag: "ğŸ‡¸ğŸ‡ª", code: "+46" },
    { name: "Switzerland", flag: "ğŸ‡¨ğŸ‡­", code: "+41" },
    { name: "Syria", flag: "ğŸ‡¸ğŸ‡¾", code: "+963" },
    { name: "Taiwan", flag: "ğŸ‡¹ğŸ‡¼", code: "+886" },
    { name: "Tajikistan", flag: "ğŸ‡¹ğŸ‡¯", code: "+992" },
    { name: "Tanzania", flag: "ğŸ‡¹ğŸ‡¿", code: "+255" },
    { name: "Thailand", flag: "ğŸ‡¹ğŸ‡­", code: "+66" },
    { name: "Togo", flag: "ğŸ‡¹ğŸ‡¬", code: "+228" },
    { name: "Tonga", flag: "ğŸ‡¹ğŸ‡´", code: "+676" },
    { name: "Trinidad and Tobago", flag: "ğŸ‡¹ğŸ‡¹", code: "+1-868" },
    { name: "Tunisia", flag: "ğŸ‡¹ğŸ‡³", code: "+216" },
    { name: "Turkey", flag: "ğŸ‡¹ğŸ‡·", code: "+90" },
    { name: "Turkmenistan", flag: "ğŸ‡¹ğŸ‡²", code: "+993" },
    { name: "Tuvalu", flag: "ğŸ‡¹ğŸ‡»", code: "+688" },
    { name: "Uganda", flag: "ğŸ‡ºğŸ‡¬", code: "+256" },
    { name: "Ukraine", flag: "ğŸ‡ºğŸ‡¦", code: "+380" },
    { name: "United Arab Emirates", flag: "ğŸ‡¦ğŸ‡ª", code: "+971" },
    { name: "United Kingdom", flag: "ğŸ‡¬ğŸ‡§", code: "+44" },
    { name: "United States", flag: "ğŸ‡ºğŸ‡¸", code: "+1" },
    { name: "Uruguay", flag: "ğŸ‡ºğŸ‡¾", code: "+598" },
    { name: "Uzbekistan", flag: "ğŸ‡ºğŸ‡¿", code: "+998" },
    { name: "Vanuatu", flag: "ğŸ‡»ğŸ‡º", code: "+678" },
    { name: "Vatican City", flag: "ğŸ‡»ğŸ‡¦", code: "+379" },
    { name: "Venezuela", flag: "ğŸ‡»ğŸ‡ª", code: "+58" },
    { name: "Vietnam", flag: "ğŸ‡»ğŸ‡³", code: "+84" },
    { name: "Yemen", flag: "ğŸ‡¾ğŸ‡ª", code: "+967" },
    { name: "Zambia", flag: "ğŸ‡¿ğŸ‡²", code: "+260" },
    { name: "Zimbabwe", flag: "ğŸ‡¿ğŸ‡¼", code: "+263" }
  ];


  const [selectedCountry, setSelectedCountry] = useState({
    name: "India",
    flag: "ğŸ‡®ğŸ‡³",
    code: "+91", // Default country code
  });

  const [isDropdownVisible, setIsDropdownVisible] = useState(false);

  const handleCountrySelect = (country) => {
    setSelectedCountry(country);
    setIsDropdownVisible(false); // Close dropdown after selection
  };

  const handleNextButton = async () => {
    if (!username) {
      console.error('User ID is not available');
      return;
    }
  
    try {
      const response = await fetch('http://192.168.1.226:8080/api/users/update-contact', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          userName: username, // Include userId in the request body for reference
          phoneNumber: number,
          countryCode: selectedCountry.code,
        }),
      });
  
      if (response.ok) {
        console.log('Contact updated successfully');
        // Navigate to the FindFriends screen and pass the userId
        updateUserData({ selectedCountry, number, username});
        navigation.navigate('Preferences', { username });
      } else {
        console.error('Failed to update contact');
      }
    } catch (err) {
      console.error('Error updating contact:', err);
    }
  };
  
  return (
    <View style={styles.container}>
      <StatusBar barStyle="dark-content" backgroundColor="#f5f5f5" />
      <View style={{ paddingVertical: 40 }}>
        <View style={{ flexDirection: 'row', alignItems: 'center', gap: 10 }}>
          <Text style={styles.title}>Help your friends find you</Text>
          <TouchableOpacity onPress={() => setModalVisible(true)}>
            <Feather name="info" size={22} color="#0073e6" />
          </TouchableOpacity>
        </View>
        <Text style={styles.description}>
          Link your Phone number to Blink ID
        </Text>

        {/* Country Selection Input */}
        <View style={styles.inputContainer}>
          <TouchableOpacity onPress={() => setIsDropdownVisible(!isDropdownVisible)}>
            <Text style={{ fontSize: 20 }}>{selectedCountry.flag}</Text>
          </TouchableOpacity>

          {/* Divider */}
          <View style={styles.divider} />

          <TextInput
            style={styles.input}
            placeholder="Select Country"
            value={selectedCountry.name}
            editable={false} // Disable manual editing of the country name
          />

          <TouchableOpacity onPress={() => setIsDropdownVisible(!isDropdownVisible)}>
            <MaterialIcons name="keyboard-arrow-down" size={24} color="#3498db" />
          </TouchableOpacity>
        </View>

        {/* Phone Input */}
        <View style={styles.inputContainer}>
          {/* <Ionicons name="call" size={24} color="#3498db" /> */}

          {/* Display the selected country's code */}
          <Text style={styles.countryCode}>{selectedCountry.code}</Text>

          <TextInput
            style={styles.input}
            placeholder="Phone"
            keyboardType="numeric"
            value={number}
            onChangeText={setNumber}
          />
        </View>

        {/* Dropdown for selecting a country (placed outside the inputContainer) */}
        {isDropdownVisible && (
          <View style={styles.dropdown}>
            <FlatList
              data={countries}
              keyExtractor={(item) => item.name}
              renderItem={({ item }) => (
                <TouchableOpacity onPress={() => handleCountrySelect(item)} style={styles.countryItem}>
                  <Text style={{ fontSize: 20 }}>{item.flag}</Text>
                  <Text style={styles.countryName}>{item.name}</Text>
                </TouchableOpacity>
              )}
              style={{ maxHeight: 150 }} // Limit the dropdown height
              scrollEnabled // Ensure scrolling is possible
            />
          </View>
        )}
      </View>

      {/* Next Button */}
      <TouchableOpacity style={styles.button} onPress={handleNextButton}>
        <Text style={styles.buttonText}>Next</Text>
      </TouchableOpacity>

      {/* Info Modal */}
      <Modal
        animationType="slide"
        transparent={true}
        visible={modalVisible}
        onRequestClose={() => setModalVisible(false)} // Close modal on back press
      >
        <View style={styles.modalBackground}>
          <View style={styles.modalContainer}>
            <Text style={styles.publicKeyValue}>
              By providing your phone number, Blink can help your friends find you automatically if they have you in their phoneâ€™s address book. You can skip this step to use Blink completely anonymously.
            </Text>

            <TouchableOpacity
              onPress={() => {
                setModalVisible(false);
                setSecondModalVisible(true); // Open the second modal
              }}
              style={[styles.wideButton, isButtonPressed ? styles.okayButtonActive : null]}
            >
              <Text style={[styles.okayButtonText, isButtonPressed ? styles.okayButtonTextActive : null]}>Okay</Text>
            </TouchableOpacity>
          </View>
        </View>
      </Modal>

      {/* Second Modal */}
      <Modal
        animationType="slide"
        transparent={true}
        visible={secondModalVisible}
        onRequestClose={() => setSecondModalVisible(false)}
      >
        <View style={styles.modalBackground}>
          <View style={styles.modalContainer}>
            <Text style={styles.publicKeyValue}>
              Contact sync helps you find your friends automatically. If you agree, phone numbers and email addresses from your phone book will be encrypted before being sent to our server.
            </Text>
            <View style={{ flexDirection: 'row', width: '100%', alignItems: 'center', left: 20, }}>
              <TouchableOpacity onPress={() => setSecondModalVisible(false)} style={[styles.noButton, isNoButtonPressed ? styles.noButtonActive : null]}>
                <Text style={[styles.noButtonText, isNoButtonPressed ? styles.noButtonTextActive : null]}>No</Text>
              </TouchableOpacity>
              <TouchableOpacity
                onPress={() => setSecondModalVisible(false)}
                style={[styles.fifthOkayButton, isButtonPressed ? styles.okayButtonActive : null]}
              >
                <Text style={[styles.fifthOkayButtonText, isButtonPressed ? styles.okayButtonTextActive : null]}>Okay</Text>
              </TouchableOpacity>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingHorizontal: 20,
    backgroundColor: '#f5f5f5',
    paddingVertical: 40,
  },
  title: {
    fontSize: 30,
    fontWeight: 'bold',
    // marginBottom: 20,
    color: '#1a3c79',
  },
  description: {
    fontSize: 14,
    textAlign: 'left',
    marginBottom: 30,
    color: '#606060',
    marginTop: 20
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    borderWidth: 1,
    borderColor: '#d3d3d3',
    borderRadius: 10,
    paddingHorizontal: 20,
    marginBottom: 15,
    backgroundColor: '#fff',
  },
  input: {
    flex: 1,
    paddingVertical: 15,
    paddingHorizontal: 10,
    alignItems: 'center'
  },
  divider: {
    width: 2,
    height: '75%',
    backgroundColor: '#e5e5e5',
    marginHorizontal: 15,
  },
  countryCode: {
    fontSize: 14,
    color: 'black',
  },
  dropdown: {
    position: 'absolute',
    top: 205, // Adjust as needed based on inputContainer position
    width: 350,
    backgroundColor: '#fff',
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 5,
    zIndex: 10,
  },
  countryItem: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 10,
  },
  countryName: {
    marginLeft: 20,
    fontSize: 16,
  },
  button: {
    position: 'absolute', // Positioning button at the bottom
    bottom: 50, // Distance from the bottom of the screen
    width: 300,
    height: 50,
    backgroundColor: '#3498db', // Blue button
    borderRadius: 30,
    justifyContent: 'center',
    alignItems: 'center',
    alignSelf: 'center', // Centers the button horizontally
  },
  buttonText: {
    color: '#FFF',
    fontSize: 18,
    fontWeight: 'bold',
  },
  modalBackground: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
  },
  modalContainer: {
    width: '80%',
    padding: 20,
    backgroundColor: '#87CEEB',
    borderRadius: 10,
    alignItems: 'center',
  },
  publicKeyValue: {
    fontSize: 16,
    color: 'black',
    marginBottom: 40,
  },
  okayButton: {
    position: 'absolute',
    bottom: 10,
    right: 20,
    paddingVertical: 10,
    paddingHorizontal: 20,
    backgroundColor: '#fff',
    borderRadius: 20,
  },
  okayButtonText: {
    color: '#000',
    fontWeight: 'bold',
    textAlign: 'center',
  },
  okayButtonActive: {
    backgroundColor: '#1F6ED4',
  },
  okayButtonTextActive: {
    color: '#fff',
  },
  wideButton: {
    width: '100%',
    position: 'absolute',
    bottom: 10,
    right: 20,
    paddingVertical: 10,
    paddingHorizontal: 20,
    backgroundColor: '#fff',
    borderRadius: 20,
  },
  noButtonActive: {
    backgroundColor: '#1F6ED4',
  },
  noButtonTextActive: {
    color: '#fff',
  },
  fifthOkayButton: {
    position: 'absolute',
    bottom: 10,
    right: 20,
    paddingVertical: 10,
    paddingHorizontal: 40,
    backgroundColor: '#fff',
    borderRadius: 20,
  },
  fifthOkayButtonText: {
    color: '#000',
    fontWeight: 'bold',
    textAlign: 'center',
  },
  noButton: {
    bottom: 10,
    right: 20,
    paddingVertical: 10,
    paddingHorizontal: 50,
    backgroundColor: 'transparent',
    borderRadius: 20,
    borderWidth: 1,
    borderColor: 'grey',
  },
  noButtonText: {
    color: '#000',
    fontWeight: 'bold',
    textAlign: 'center',
  },
});

export default FindFriends;
